{"version":3,"file":"static/js/625.403791cc.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/pages/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport {Form, Field}  from \"formik\";\n\nexport const SearchForm = styled(Form)`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url(\"data:image/svg+xml,<svg viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z' clip-rule='evenodd'/></svg>\");\n    background-color: #303f9f;\n    background-size: 60%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n&:hover {\n    opacity: 1;\n}\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled(Field)`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n&::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n`;","import React, { useState } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as yup from 'yup';\nimport PropTypes from \"prop-types\";\nimport {  SearchForm, SearchFormBtn, SearchFormBtnLabel, SearchFormInput } from \"./Searchbar.styled\";\n\nconst schema = yup.string().required();\n\nconst SearchBar = ({onSubmit, query}) => {\n    const [searchValue, setSearchValue] = useState(query);\n\n    const handleSearchChange = event => {\n        setSearchValue(event.target.value);\n    };\n\n    const handleSubmit = () => {\n\n        if (searchValue.trim() === '') {\n            alert('Please, enter movie name!');\n            return;\n        }\n\n        onSubmit(searchValue);\n    };\n\n        return (\n        <div>\n            <Formik\n                initialValues={{ searchValue: query}}\n                onSubmit={handleSubmit}\n                validationSchema={schema}\n            >\n                <SearchForm>\n                    <SearchFormInput\n                        type=\"text\"\n                        name=\"searchValue\"\n                        value={searchValue}\n                        onChange={handleSearchChange}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                    />\n                    <SearchFormBtn\n                        type=\"submit\">\n                        <SearchFormBtnLabel>\n                            Search\n                        </SearchFormBtnLabel>\n                    </SearchFormBtn>\n                    <ErrorMessage\n                        name=\"searchValue\"\n                        component=\"div\"\n                    />\n                </SearchForm>\n            </Formik>\n        </div>\n    )\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    query: PropTypes.string\n}","import SearchBar from 'components/Searchbar/Searchbar';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport themoviedbApi from '../../services/themoviedb-api';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchFilmValue = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleFormSubmit = searchValue => {\n    setSearchParams({query: searchValue});\n  };\n\n  useEffect(() => {\n    if (searchFilmValue) {\n      const fetchSearchMovies = async () => {\n      const response = await themoviedbApi.fetchSearchMovies(searchFilmValue, 1);\n      setSearchMovies(response.data.results);\n    };\n\n    try {\n      fetchSearchMovies();\n    } catch (error) {\n      console.log(error.message);\n    } \n    }\n  }, [searchFilmValue])\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} query={searchFilmValue} />  \n      <ul>\n          {searchMovies.map(({ title, id }) => {\n              return (\n                  <li key={id}>\n                      <Link to={`${id}`} state={{from: location}}>\n                          {title}\n                      </Link>\n                  </li>\n              );\n          })}\n      </ul>\n    </>\n  )\n}\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'd5b6a5ca94641e9f7b547d0396725c93';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchSearchMovies = async (searchValue, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${searchValue}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchFilmCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchFilmDetails,\n  fetchFilmCredits,\n  fetchFilmReviews,\n};\n\nexport default api;\n"],"names":["SearchForm","styled","Form","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","Field","schema","yup","required","onSubmit","query","useState","searchValue","setSearchValue","initialValues","trim","alert","validationSchema","type","name","value","onChange","event","target","autoComplete","autoFocus","placeholder","component","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","searchFilmValue","get","location","useLocation","useEffect","fetchSearchMovies","themoviedbApi","response","data","results","error","console","log","message","map","title","id","to","state","from","axios","API_KEY","fetchTrending","page","fetchFilmDetails","movieId","fetchFilmCredits","fetchFilmReviews","api"],"sourceRoot":""}
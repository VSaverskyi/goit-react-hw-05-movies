{"version":3,"file":"static/js/725.77bd72ea.chunk.js","mappings":"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","sources":["components/Home/Home.styled.jsx","components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/pages/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const SectionWrap = styled.div`\npadding: 20px;\n`;\n\nexport const H2 = styled.h2`\nfont-size: 28px;\n`;\n\nexport const StyledList = styled.ul`\npadding: 32px;\nlist-style: circle;\n`;\n\nexport const StyledListItem = styled.li`\npadding: 4px;\n`;","import styled from \"@emotion/styled\";\n\nexport const FilmCardWrapper = styled.div`\ndisplay: flex;\ngap: 16px;\npadding: 12px;\n`;\n\nexport const FilmImg = styled.img`\nwidth: 360px;\n`;\n\nexport const FilmDescription = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 12px;\njustify-content: space-around;\n`;\n\nexport const AddInfo = styled.div`\npadding: 16px;\n`;","import { H2, StyledList, StyledListItem } from \"components/Home/Home.styled\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport themoviedbApi from '../../services/themoviedb-api';\nimport { AddInfo, FilmCardWrapper, FilmDescription, FilmImg } from \"./FilmCard.styled\";\n\nconst FilmCard = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/\");\n  const [filmDetails, setFilmDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => { \n    if (movieId) {\n      const fetchFilmInfo= async () => {\n      const response = await themoviedbApi.fetchFilmDetails(movieId);\n      setFilmDetails(response.data);\n    };\n\n    try {\n      fetchFilmInfo();\n    } catch (error) {\n      console.log(error.message);\n    }\n    }\n  }, [movieId])\n  \n    if (filmDetails) {\n        const { poster_path, title, vote_average, overview, genres } = filmDetails;\n    \n        return (\n            <div>\n                <Link to={backLinkLocationRef.current}>Go back</Link>\n                <FilmCardWrapper>\n                    <FilmImg src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={title} />\n                    <FilmDescription>\n                        <H2>{title}</H2>\n                        <p>{`User score: ${Math.floor(vote_average * 10)}%`}</p>\n                        <h3>Overview</h3>\n                        <p>{overview}</p>\n                        <h4>Genres</h4>\n                        <p>{genres.map(genr => genr.name).join(' ')}</p>\n                    </FilmDescription>\n                </FilmCardWrapper>\n                <AddInfo>\n                    <h5>Additional information</h5>\n                    <StyledList>\n                        <StyledListItem><Link to={`cast`}>Cast</Link></StyledListItem>\n                        <StyledListItem><Link to={`reviews`}>Reviews</Link></StyledListItem>\n                    </StyledList>\n                </AddInfo>\n            </div>\n        )\n        }\n};\n\nexport default FilmCard;","import FilmCard from 'components/FilmCard/FilmCard';\nimport React, { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n    return (\n      <>\n        <FilmCard/>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet/>\n        </Suspense>\n      </>\n  )\n}\n\nexport default MovieDetails","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'd5b6a5ca94641e9f7b547d0396725c93';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchSearchMovies = async (searchValue, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${searchValue}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchFilmCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchFilmDetails,\n  fetchFilmCredits,\n  fetchFilmReviews,\n};\n\nexport default api;\n"],"names":["SectionWrap","styled","H2","StyledList","StyledListItem","FilmCardWrapper","FilmImg","FilmDescription","AddInfo","location","useLocation","backLinkLocationRef","useRef","state","from","useState","filmDetails","setFilmDetails","movieId","useParams","useEffect","fetchFilmInfo","themoviedbApi","response","data","error","console","log","message","poster_path","title","vote_average","overview","genres","to","current","src","alt","Math","floor","map","genr","name","join","Suspense","fallback","axios","API_KEY","fetchTrending","fetchSearchMovies","searchValue","page","fetchFilmDetails","fetchFilmCredits","fetchFilmReviews","api"],"sourceRoot":""}
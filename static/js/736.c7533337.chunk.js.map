{"version":3,"file":"static/js/736.c7533337.chunk.js","mappings":"wRAEaA,EAAiBC,EAAAA,EAAAA,GAAH,2CAIdC,EAAgBD,EAAAA,EAAAA,IAAH,2DAKbE,EAAkBF,EAAAA,EAAAA,IAAH,2FAOfG,EAAiBH,EAAAA,EAAAA,EAAH,6D,SCwB3B,EArCa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,IAfAE,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAS,CACX,IAAMG,EAAS,mCAAE,oGACMC,EAAAA,EAAAA,iBAA+BJ,GADrC,OACXK,EADW,OAEjBN,EAAYM,EAASC,KAAKC,MAFT,2CAAF,qDAKjB,IACEJ,GAGD,CAFC,MAAOK,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACA,CACF,GAAE,CAACX,IAEAF,EACF,OACA,SAACN,EAAD,UACGM,EAASc,KAAI,SAAAC,GACZ,IAAQC,EAAsCD,EAAtCC,UAAWC,EAA2BF,EAA3BE,KAAMC,EAAqBH,EAArBG,GAAIC,EAAiBJ,EAAjBI,aAC7B,OAAO,0BACJA,IAAgB,SAACvB,EAAD,CAAewB,IAAG,0CAAqCD,GAAgBE,IAAI,UAC5F,UAACxB,EAAD,YACE,SAACC,EAAD,UAAiBmB,KACjB,4CAAkBD,UAJNE,EAOjB,KAIN,C,kECtCDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACGF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD5C,cACdhB,EADc,yBAEbA,GAFa,2CAAH,qDAKbkB,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACDL,EAAAA,EAAAA,IAAA,8BACEI,EADF,oDACyDC,EADzD,oBACyEJ,IAFxE,cAClBhB,EADkB,yBAIjBA,GAJiB,2CAAH,wDAOjBqB,EAAgB,mCAAG,WAAM1B,GAAN,uFACAoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAuCqB,IADvC,cACjBhB,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBsB,EAAgB,mCAAG,WAAM3B,GAAN,uFACAoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAFhB,cACjBhB,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBuB,EAAgB,mCAAG,WAAM5B,GAAN,uFACAoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAFhB,cACjBhB,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBwB,EAAM,CACVP,cAAAA,EACAC,kBAAAA,EACAG,iBAAAA,EACAC,iBAAAA,EACAC,iBAAAA,GAGF,K","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledCastList = styled.ul`\nmin-width: 720px;\n`;\n\nexport const StyledCastImg = styled.img`\nmargin-left: 12px;\nwidth: 180px;\n`;\n\nexport const StyledCastDescr = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\npadding: 8px;\n`;\n\nexport const StyledCastName = styled.p`\nfont-size: 18px;\nfont-weight: 700;\n`;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport themoviedbApi from '../../services/themoviedb-api';\nimport { StyledCastDescr, StyledCastImg, StyledCastList, StyledCastName } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState(null);\n  const { movieId } = useParams();\n  \n  useEffect(() => { \n    if (movieId) {\n      const fetchCast= async () => {\n      const response = await themoviedbApi.fetchFilmCredits(movieId);\n      setCastList(response.data.cast);\n    };\n\n    try {\n      fetchCast();\n    } catch (error) {\n      console.log(error.message);\n    }\n    }  \n  }, [movieId])\n\n  if (castList) {\n    return (\n    <StyledCastList>\n      {castList.map(castItem => {\n        const { character, name, id, profile_path } = castItem;\n        return <li key={id}>\n          {profile_path && <StyledCastImg src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt=\"name\" />}\n          <StyledCastDescr>\n            <StyledCastName>{name}</StyledCastName>\n            <p>{`Character: ${character}`}</p>\n          </StyledCastDescr>\n        </li>\n      })}\n    </StyledCastList>\n    )\n  }\n}\n\nexport default Cast","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'd5b6a5ca94641e9f7b547d0396725c93';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchSearchMovies = async (searchValue, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${searchValue}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchFilmCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchFilmDetails,\n  fetchFilmCredits,\n  fetchFilmReviews,\n};\n\nexport default api;\n"],"names":["StyledCastList","styled","StyledCastImg","StyledCastDescr","StyledCastName","useState","castList","setCastList","movieId","useParams","useEffect","fetchCast","themoviedbApi","response","data","cast","error","console","log","message","map","castItem","character","name","id","profile_path","src","alt","axios","API_KEY","fetchTrending","fetchSearchMovies","searchValue","page","fetchFilmDetails","fetchFilmCredits","fetchFilmReviews","api"],"sourceRoot":""}
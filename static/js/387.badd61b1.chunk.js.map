{"version":3,"file":"static/js/387.badd61b1.chunk.js","mappings":"oRAEaA,EAAoBC,EAAAA,EAAAA,GAAH,6DAKjBC,EAAwBD,EAAAA,EAAAA,GAAH,yD,SCmClC,EArCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAS,CACZ,IAAMM,EAAS,mCAAE,oGACOC,EAAAA,EAAAA,iBAA+BP,GADtC,OACVQ,EADU,OAEhBJ,EAAWI,EAASC,KAAKC,SAFT,2CAAF,qDAKhB,IACEJ,GAGD,CAFC,MAAOK,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACA,CACF,GAAE,CAACd,IAEmB,IAAnBG,EAAQY,QACH,uBAAG,+CAIV,+BACE,SAAClB,EAAD,UACGM,EAAQa,KAAI,SAAAC,GACZ,OAAO,UAAClB,EAAD,YACJ,0CAAgBkB,EAAOC,WACvB,uBAAID,EAAOE,YAFqBF,EAAOG,GAI1C,OAIR,C,kECtCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACGF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD5C,cACdd,EADc,yBAEbA,GAFa,2CAAH,qDAKbgB,EAAiB,mCAAG,WAAOC,EAAaC,GAApB,uFACDL,EAAAA,EAAAA,IAAA,8BACEI,EADF,oDACyDC,EADzD,oBACyEJ,IAFxE,cAClBd,EADkB,yBAIjBA,GAJiB,2CAAH,wDAOjBmB,EAAgB,mCAAG,WAAM3B,GAAN,uFACAqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCsB,IADvC,cACjBd,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBoB,EAAgB,mCAAG,WAAM5B,GAAN,uFACAqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBsB,IAFhB,cACjBd,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBqB,EAAgB,mCAAG,WAAM7B,GAAN,uFACAqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACgBsB,IAFhB,cACjBd,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBsB,EAAM,CACVP,cAAAA,EACAC,kBAAAA,EACAG,iBAAAA,EACAC,iBAAAA,EACAC,iBAAAA,GAGF,K","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledReviewsList = styled.ul`\nlist-style: circle;\npadding: 16px;\n`;\n\nexport const StyledReviewsListItem = styled.li`\npadding: 8px;\nfont-size: 12px;\n`;","import React, { useEffect, useState } from 'react'\nimport themoviedbApi from '../../services/themoviedb-api'\nimport { useParams } from 'react-router-dom';\nimport { StyledReviewsList, StyledReviewsListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => { \n    if (movieId) {\n     const fetchCast= async () => {\n      const response = await themoviedbApi.fetchFilmReviews(movieId);\n      setReviews(response.data.results);\n    };\n\n    try {\n      fetchCast();\n    } catch (error) {\n      console.log(error.message);\n    } \n    }\n  }, [movieId])\n  \n  if (reviews.length === 0) {\n    return <p>We don`t have any reviews for this movie.</p>;\n  }\n\n  return (\n    <>\n      <StyledReviewsList>\n        {reviews.map(review => {\n         return <StyledReviewsListItem key={review.id}>\n            <h3>{`Author: ${review.author}`}</h3>\n            <p>{review.content}</p>\n          </StyledReviewsListItem>\n        })}\n      </StyledReviewsList>\n    </>\n  )\n}\n\nexport default Reviews","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'd5b6a5ca94641e9f7b547d0396725c93';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchSearchMovies = async (searchValue, page) => {\n  const response = await axios.get(\n    `/search/movie?query=${searchValue}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nconst fetchFilmCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchFilmDetails,\n  fetchFilmCredits,\n  fetchFilmReviews,\n};\n\nexport default api;\n"],"names":["StyledReviewsList","styled","StyledReviewsListItem","movieId","useParams","useState","reviews","setReviews","useEffect","fetchCast","themoviedbApi","response","data","results","error","console","log","message","length","map","review","author","content","id","axios","API_KEY","fetchTrending","fetchSearchMovies","searchValue","page","fetchFilmDetails","fetchFilmCredits","fetchFilmReviews","api"],"sourceRoot":""}